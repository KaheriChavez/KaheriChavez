

###################### SELECT, COUNT(*) ##############################################

SELECT Name, Continent, Region, LifeExpectancy FROM Country WHERE Continent='North America' ORDER BY LifeExpectancy DESC LIMIT 5 OFFSET 20;
  DESC --> Display retrieve data in descendent
  LIMIT 5 --> Limit the retrieve data in 5
  OFFSET 20 --> Skip the first 20 rows
 
SELECT COUNT (*) FROM Country WHERE Population>1000000 AND Continent='Europe';
  COUNT --> to Count rows instead listing them

######################## INSERT, UPDATE, DELETE STATEMENTS, ALTER ###########################
// Null = is the absence of value

INSERT INTO customer (name, address, city, state, zip)
    VALUES ('alan chavez', 'Ireland', 'Dublin', 'Leisester', 'D09F512');

UPDATE customer SET address = 'calle walaby', state = 'queti';

DELETE FROM customer WHERE id=4;

CREATE TABLE test (a INTEGER, b TEXT, c TEXT);
    Create a table with 3 columns
INSERT INTO test VALUES (1, 'This', 'Right here!' );
    Populate a row with the data
INSERT INTO test ( b, c) VALUES ('tHAT', 'oVER HERE!');
    Is not necessary to fill all spaces in a row
DROP TABLE IF EXISTS test;
    DELETE table "test"
    
CREATE TABLE test(      // avoid to create rows with null values if declared
 a INTEGER NOT NULL,
 B TEXT NOT NULL,
 C TEXT
);

INSERT INTO test (b,c) VALUES ('one', 'two');

ALTER TABLE       // To add a new column and its data Type


############### CONTRAINS CREATE RULES GOVERING THE BEHAVIOURS OF COLUMNS IN YOUR TABLE ################################

CREATE TABLE test (a TEXT UNIQUE, b TEXT, c TEXT DEFAULT 'panda');
    TEXT UNIQUE, TEXT DEFAULT ....

#################### INTEGER PRIMARY KEY (DIFFERENT IN EACH SQL DATABASE) #############################################
CREATE TABLE test (
 id INTEGER PRIMARY KEY,    // NEW AND UNIQUE SEQUENCIAL NUMBER FOR EACH ROW CREATED
 
 
 ############################ FILTERING ##########################################
 
 SELECT Name, Continent, Population FROM country      // any row including the word 'island'
    WHERE Name LIKE '%island%' ORDER BY Name;         // '%island' any row with island at the end 
   
   WHERE Continent IN ('Europe', 'Asia') ORDER BY Name;    //Any matching word in the column selected 

SELECT DISTINCT Continent FROM Country;               // Showing Just unique results

############ RELATION DATABASES WHERE SOME TABLES CONTAIN INFORMATION FROM OTHER TABLES #############################

JOIN

SELECT c.name AS Cust, c.zip, i.name AS Item, i.description, s.quantity AS Quan, s.price AS Price
    FROM sale AS s
    JOIN item AS i ON s.item_id = i.id
    JOIN customer AS c ON s.customer_id = c.id
    ORDER BY Cust, Item
;

